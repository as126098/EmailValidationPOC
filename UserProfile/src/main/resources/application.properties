server.port= 7000
eureka.client.serviceUrl.defaultZone:http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=false
spring.main.allow-bean-definition-overriding=true

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=testjwtclientid
security.jwt.client-secret=XY7kmzoNzl100
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid

#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.url=jdbc:mysql://localhost:3306/userprofile
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/userprofile?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=MyNewPass

#
#
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
## Number of ms to wait before throwing an exception if no connection is available.
#spring.datasource.tomcat.max-wait=10000
#
## Maximum number of active connections that can be allocated from this pool at the same time.
#spring.datasource.tomcat.max-active=50
#
## Validate the connection before borrowing it from the pool.
#spring.datasource.tomcat.test-on-borrow=true

#
#
#spring.kafka.bootstrap-servers= localhost:9092
#spring.kafka.topic.userRegistered = eValid

